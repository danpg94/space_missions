---
- name: Install Docker on Ubuntu
  hosts: all
  become: yes
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install necessary packages for Docker
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
      tags: docker_dependencies

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags: docker_dependencies

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      tags: docker_dependencies

    - name: Update package cache after adding repository
      apt:
        update_cache: yes
      tags: docker_dependencies

    - name: Install Docker
      apt:
        name: docker-ce
        state: latest
      tags: docker_installation

- name: Clone repository and run Docker container
  hosts: all
  become: yes
  tasks:
    - name: Clone repository
      git:
        repo: https://github.com/danpg94/space_missions.git
        dest: "{{vm_repo_path}}"
      tags: clone_repo

    - name: Change to project directory
      shell: cd "{{vm_repo_path}}" 
      args:
        chdir: "{{vm_repo_path}}" 
      tags: configure_container

    - name: Switch to "main" branch # Change "main" to the name of the current main branch
      shell: git checkout main
      args:
        chdir: "{{vm_repo_path}}"
      tags: configure_container

    - name: Change to Django directory
      shell: cd "{{vm_django_path}}"
      args:
        chdir: "{{vm_django_path}}" 
      tags: configure_container

    - name: Build Docker container
      shell: sudo docker build --build-arg ALLOWED_HOST_PARAM="{{vm_ip_address}}" . -t "{{vm_docker_route}}" 
      args:
        chdir: "{{vm_django_path}}" 
      tags: configure_container

    - name: Remove Previous Container
      shell: sudo docker rm --force space_missions
      # ignore_errors: true  Ignore errors if the container doesn't exist yet
      tags: configure_container

    - name: Run Docker container
      shell: sudo docker run --name=space_missions -d -p 80:80 "{{vm_docker_route}}" 
      tags: configure_container

    - name: Open Firewall
      shell: sudo ufw allow 80
      tags: configure_container